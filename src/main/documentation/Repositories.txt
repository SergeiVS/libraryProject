BooksRepositoryInterface

    Optional<Book> addOrUpdateBook(Book book);
    Book[] findAllBooks();
    Optional<Book> findBookById(Integer id);
    Book[] findBooksByTitle(String title);
    Book[] findBooksByAuthorId(Integer id);
    Book[] findBooksByStatus(BookStatus status);
    Book[] findBooksBySubjectId(Integer id);
    Book[] findBooksByAvailability(BookStatus status);
    Book[] findBooksByCodeISBN(String codeISBN);
    Book[] findBooksByPublisherId(String id);
    Boolean deleteBookById(Integer id);

AuthorsRepositoryInterface

   Optional<Author> addOrUpdateAuthor(Author newAuthor);
   Author[] findAllAuthors();
   Optional<Author> findAuthorById(Integer id);
   Author[] findAuthorsByName(String firstName, String lastName);

SubjectsRepositoryInterface

   Optional<Subject> addOrUpdateSubject(Subject newSubject);
   Optional<Subject> findSubjectById(String id);
   Subject[] findAllSubjects();
   Optional<Subject> findSubjectByName(String name);
   Boolean deleteSubjectById(Integer id);